// Toggles
//
// Used in conjunction with global variables to enable certain theme features.
// Utilities
@import "mixins/breakpoints";
@import "mixins/hover";
@import "mixins/image";
@import "mixins/badge";
@import "mixins/resize";
@import "mixins/screen-reader";
@import "mixins/size";
@import "mixins/reset-text";
@import "mixins/text-emphasis";
@import "mixins/text-hide";
@import "mixins/text-truncate";
@import "mixins/visibility";

// // Components
@import "mixins/alert";
@import "mixins/buttons";
@import "mixins/pagination";
@import "mixins/lists";
@import "mixins/list-group";
@import "mixins/nav-divider";
@import "mixins/forms";
@import "mixins/table-row";

// // Skins
@import "mixins/background-variant";
@import "mixins/border-radius";
@import "mixins/box-shadow";
@import "mixins/gradients";
@import "mixins/transition";

// // Layout
@import "mixins/clearfix";
// @import "mixins/navbar-align";
@import "mixins/grid-framework";
@import "mixins/grid";
@import "mixins/float";

@mixin transform($transforms) {
    -moz-transform: $transforms;
    -o-transform: $transforms;
    -ms-transform: $transforms;
    -webkit-transform: $transforms;
    transform: $transforms;
}
@mixin item-in-center {
    @include transform(translate(-50%, -50%));
    left: 50%;
    position: absolute;
    top: 50%;
}
@mixin img-inbg {
    height: 100%;
    overflow: hidden;
    background-size: cover;
    background-repeat: no-repeat;
    background-position: top left;
    width: 100%;
    position: relative;
    display: inline-block;
}
@mixin shadow($shadow...) {
    -webkit-box-shadow: $shadow;
    -moz-box-shadow: $shadow;
    box-shadow: $shadow;
}
@mixin linear-gradient($args...) {
 background-image: -o-linear-gradient($args); 
 background-image: -moz-linear-gradient($args); 
 background-image: -webkit-linear-gradient($args); 
  background-image: linear-gradient($args); 
}
@mixin circle($width, $color) {
    width: $width;
    height: $width;
    background-color: $color;
    -webkit-border-radius: 50%;
    -moz-border-radius: 50%;
    border-radius: 50%;
}


// triangle css
@mixin triangle($direction, $size, $color) {
    background-color: $color;
    width: $size;
    height: $size;
    border-top-right-radius: 30%;
    &:before,
    &:after {
        width: $size;
        height: $size;
        border-top-right-radius: 30%;
    }
    @if $direction=='up' {
        @include transform(rotate(-60deg) skewX(-30deg) scale(1, .866));
    }
    @else if $direction=='down' {
        @include transform(rotate(-120deg) skewX(-30deg) scale(1, .866));
    }
    @else if $direction=='left' {
        @include transform(rotate(-30deg) skewX(-30deg) scale(1, .866));
    }
    @else if $direction=='right' {
        @include transform(rotate(-90deg) skewX(-30deg) scale(1, .866));
    }
}
@mixin flex {
    display: -webkit-box;
    /* OLD - iOS 6-, Safari 3.1-6 */
    display: -moz-box;
    /* OLD - Firefox 19-  */
    display: -ms-flexbox;
    /* TWEENER - IE 10 */
    display: -webkit-flex;
    /* NEW - Chrome */
    display: flex;
}

@mixin keyframes($animationName) {
    @-webkit-keyframes #{$animationName} {
        @content;
    }
    @-moz-keyframes #{$animationName} {
        @content;
    }
    @-o-keyframes #{$animationName} {
        @content;
    }
    @keyframes #{$animationName} {
        @content;
    }
}

@mixin animation($str) {
    -webkit-animation: #{$str};
    -moz-animation: #{$str};
    -o-animation: #{$str};
    animation: #{$str};
}

@mixin has-icon-left($background-color, $size) {
    background-color: $background-color;
    padding-left: $size;
    border-color: $background-color;
    &:before {
        width: $size;
        background-color: darken($background-color, 8%);
    }
    @include hover-focus-active {
        background-color: darken($background-color, 8%);
        border-color: $background-color;
    }
    .icon {
        width: $size;
    }
}
